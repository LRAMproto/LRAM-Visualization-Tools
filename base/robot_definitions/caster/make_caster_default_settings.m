function make_caster_default_settings
% Generates a set of settings for the casting robot simulation.
links = load_links;
joints = load_joints;
misc = load_misc;

%settings = struct('links', links, 'joints', joints, 'misc', misc);
% The following saves the settings in the same folder as the script, then
% returns the working directory to the previous working directory.
previous = pwd;
cd(fileparts(mfilename('fullpath')))
save('caster_default_settings','links','joints','misc');
cd(previous);
end

function joints = load_joints
    %% sets up joints

    misc = load_misc;
    
    arm_joint = Joint();
    set(arm_joint,...
        'name','Arm Joint',...
        'type','Revolute',...
        'parent','Box',...
        'child','Arm',...
        'origin',[0,0],...
        'angle',-1.3...
        )

    box_to_plate_joint = Joint();
    set(box_to_plate_joint,...
        'name','Box to Plate Joint',...
        'type','Continuous',...
        'parent','Robot Plate',...
        'child','Box',...
        'position',...
        [(.5+(1*misc.robot.PegPosition(1))-1)*2.54/100,...
        -(.5+(1*misc.robot.PegPosition(2))-1)*2.54/100],...
        'origin',[(-12+12.5/2)*2.54/100,(12+4/2)*2.54/100]...
        );    
    
    robot_plate_to_frame_joint = Joint();
    set(robot_plate_to_frame_joint,...
        'name','Robot Plate to Frame Joint',...
        'type','Continuous',...
        'parent','Frame',...
        'child','Robot Plate',...
        'position',[0 1],...
        'origin',[(12*2.54/100),((12+2.5)*2.54/100)]...
        );    
    target_plate_to_frame_joint = Joint();
    set(target_plate_to_frame_joint,...
        'name','Target Plate to Frame Joint',...
        'type','Continuous',...
        'parent','Frame',...
        'child','Target Plate',...
        'position',[0 1],...        
        'origin',[2.75,((12+2.5)*2.54/100)]...
        );
        joints = [robot_plate_to_frame_joint, target_plate_to_frame_joint, box_to_plate_joint, arm_joint];
end

function links = load_links
   % Sets up Links
    misc = load_misc;
   
    framepoints = MakeFramePoints();
    
    frame = Link();
    set(frame,...
        'name','Frame',...
        'type','Custom',...
        'vertices',framepoints,...
        'fillcolor', [0.6 0.6 0.6]...
        );
    
    base = Link();
    set(base,...
        'name','Box',...
        'type','Rectangle',...
        'width',(12.5*2.54/100),...
        'height',(4*2.54/100),...
        'origin',[0,0],...
        'fillcolor',[0.6 0.6 0.6]...        
        );

    robot_plate = Link();
    set(robot_plate,...
        'name','Robot Plate',...
        'type','Rectangle',...
        'width',(24*2.54/100),...
        'height',(24*2.54/100),...
        'origin_angle',0,...
        'cap_pct',0.0,...
        'fillcolor',[0 0 0]...    
        );

    target_plate = Link();
    set(target_plate,...
        'name','Target Plate',...
        'type','Rectangle',...
        'width',(24*2.54/100),...
        'height',(24*2.54/100),...
        'origin_angle',0,...
        'fillcolor',[0 0 0]...    
        );    
    
    arm = Link();
    set(arm,...
        'name','Arm',...
        'type','Rectangle',...
        'width',(1*2.54/100),...
        'height',(18*2.54/100),...
        'origin',[0,(9*2.54/100)],...
        'cap_pct',0.05,...
        'fillcolor',[0.3 0.3 0.3]...
        );

    ball = Link();
    set(ball,...
        'name','Ball',...
        'type','Circle',...
        'radius',0.0625,...
        'fillcolor',misc.colors.HattonRed,...
        'origin',[1,1]...
        );    
    
    % Order matters here: objects on top appear at the bottom layer of the
    % simulation.
    links = [frame, target_plate, robot_plate, base, arm, ball];    
end

function misc = load_misc
% A function to define miscellaneous data that might be useful for certain
% programs (for example, specifying unique colors, etc).

    colors = struct(...
        'HattonRed', [234 14 30]/255,...
        'OSUOrange', [195 69 0]/255,...
        'Default', 1 ...
        );
    robot = struct('PegPosition',[8,11]);
    misc = struct('colors',colors,'robot', robot);
end

function framepoints = MakeFramePoints()

% Draws the frame.

xf=[ 0         0   23.50000   97.5  117.7500;
     0  119.2500   23.50000   97.5  117.7500;
    1.5000  119.2500   22.0000   96  119.2500;
    1.5000         0   22.0000   96  119.2500];
yf=[   83.4960   83.4960   81.9960   81.9960   81.9960;
         0   83.4960         0         0         0;
         0   81.9960         0         0         0;
   83.4960   81.9960   81.9860   81.9860   81.9860];

mxf = (xf)*(2.54/100);
myf = (yf+2.5)*(2.54/100);

framepoints.xdata = mxf;
framepoints.ydata = myf;
end