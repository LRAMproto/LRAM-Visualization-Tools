function make_caster_default_settings
% Generates a set of settings for the casting robot simulation.
misc = load_misc;
[links,joints] = load_elements(misc);

% The following saves the settings in the same folder as the script, then
% returns the working directory to the previous working directory.

previous = pwd;
cd(fileparts(mfilename('fullpath')))
save('caster_default_settings','links','joints','misc');
cd(previous);
end

function [links,joints] = load_elements(misc)
    %% Frame 

    framepoints = MakeFramePoints();
    
    frame = Link();
    set(frame,...
        'name','Frame',...
        'type','Custom',...
        'vertices',framepoints,...
        'fillcolor', [0.6 0.6 0.6]...
        );
    
    %% Robot Mounting Plate
    robot_mounting_plate = Link();
    set(robot_mounting_plate,...
        'name','Robot Mounting Plate',...
        'type','Rectangle',...
        'width',(24*2.54/100),...
        'height',(24*2.54/100),...
        'origin_angle',0,...
        'cap_pct',0.0,...
        'line_width',2,...
        'buttondown_fcn',@explain_link,...        
        'fillcolor',[0 0 0]...    
        );
    
    % secures plate to frame
    robot_mounting_plate_to_frame_joint = Joint();
    set(robot_mounting_plate_to_frame_joint,...
        'name','Robot Mounting Plate to Frame Joint',...
        'type','Continuous',...
        'parent','Frame',...
        'child','Robot Mounting Plate',...
        'position',[0 1],...
        'origin',[(12*2.54/100),((12+2.5)*2.54/100)]...
        );       
    
    %% Robot Box, Arm
    base = Link();
    set(base,...
        'name','Box',...
        'type','Rectangle',...
        'width',(12.5*2.54/100),...
        'height',(4*2.54/100),...
        'origin',[0,0],...
        'cap_pct',0.2,...
        'buttondown_fcn',@explain_link,...
        'fillcolor','white'...        
        );
    arm = Link();
    set(arm,...
        'name','Arm',...
        'type','Rectangle',...
        'width',(1*2.54/100),...
        'height',(18*2.54/100),...
        'origin',[0,(9*2.54/100)],...
        'cap_pct',0.2,...
        'line_width',2,...
        'buttondown_fcn',@explain_link,...        
        'fillcolor','white'...
        );
    
        arm_joint = Joint();
    set(arm_joint,...
        'name','Arm Joint',...
        'type','Revolute',...
        'parent','Box',...
        'child','Arm',...
        'origin',[0,0],...
        'angle',pi/2 ...
        )

    box_to_plate_joint = Joint();
    set(box_to_plate_joint,...
        'name','Box to Mounting Plate Joint',...
        'type','Continuous',...
        'parent','Robot Mounting Plate',...
        'child','Box',...
        'position',...
        [(.5+(1*misc.robot.PegPosition(1))-1)*2.54/100,...
        -(.5+(1*misc.robot.PegPosition(2))-1)*2.54/100],...
        'origin',[(-12+12.5/2)*2.54/100,(12+4/2)*2.54/100]...
        );    

    
    %% Target Mounting Plate
    
    target_mounting_plate = Link();
    set(target_mounting_plate,...
        'name','Target Mounting Plate',...
        'type','Rectangle',...
        'width',(24*2.54/100),...
        'height',(24*2.54/100),...
        'origin_angle',0,...
        'buttondown_fcn',@explain_link,...        
        'fillcolor',[0 0 0]...    
        );        

    % Secures plate to Frame
 
    target_mounting_plate_to_frame_joint = Joint();
    set(target_mounting_plate_to_frame_joint,...
        'name','Target Mounting Plate to Frame Joint',...
        'type','Continuous',...
        'parent','Frame',...
        'child','Target Mounting Plate',...
        'position',[0 1],...        
        'origin',[2.75,((12+2.5)*2.54/100)]...
        );    
    
    %% Target Plate Pivot
    
    target_plate_pivot = Link();
    set(target_plate_pivot,...
        'name','Target Plate Pivot',...
        'type','Circle',...
        'radius',(0.75*2.54/100),...
        'buttondown_fcn',@explain_link,...        
        'fillcolor',[.8 .8 .8]...
    );

      target_plate_pivot_to_plate_joint = Joint();
    set(target_plate_pivot_to_plate_joint,...
        'name','Target Plate Pivot to Target Mounting Plate Joint',...
        'type','Continuous',...
        'parent','Target Mounting Plate',...
        'child','Target Plate Pivot',...
        'position',...
        [(2+(1*misc.target.PegPosition(1))-1)*2.54/100,...
        -(3+(1*misc.target.PegPosition(2))-1)*2.54/100],...
        'origin',[(-12)*2.54/100,(12)*2.54/100]...
        );    
    
    %% Target Plate
    
    target_plate = Link();
    set(target_plate,...
        'name','Target Plate',...
        'type','Rectangle',...
        'width',18*2.54/100,...
        'height',.5*2.54/100,...
        'origin',[0 1.5*2.54/100],...
        'buttondown_fcn',@explain_link,...        
        'fillcolor','white');   
    
    target_plate_to_pivot_joint = Joint();
    set(target_plate_to_pivot_joint,...
        'name','Target Plate to Pivot Joint',...
        'parent','Target Plate Pivot',...
        'child','Target Plate',...
        'angle',1,...
        'pivot_point',[0 0]...
        );
    
    %% Ball/World
    root_link = Link();
    set(root_link,...
        'name','Root Link',...
        'type','Circle',...
        'radius',0.0,...
        'origin',[0 0]...
        );       
    
    ball = Link();
    set(ball,...
        'name','Ball',...
        'type','Circle',...
        'radius',1.5*2.54/100,...
        'fillcolor',misc.colors.HattonRed,...
        'line_width',0.5,...
        'buttondown_fcn',@explain_link,...        
        'origin',[0,0]...
        );        

    ball_position_joint = Joint();
    set(ball_position_joint,...
        'name','Ball Position Joint',...
        'type','Continuous',...
        'parent','Root Link',...
        'child','Ball',...
        'origin',[0 0],...
        'position',[2, 1]...
        );   
     
    %% Collecting joints/links
    
    % Order matters in the links: objects on top appear at the bottom layer of the
    % simulation.
   
    links = [frame, target_mounting_plate, robot_mounting_plate, base, arm, target_plate_pivot, target_plate, ball, root_link];
    joints = [robot_mounting_plate_to_frame_joint, target_mounting_plate_to_frame_joint, box_to_plate_joint, arm_joint, target_plate_pivot_to_plate_joint, target_plate_to_pivot_joint, ball_position_joint];    
end

function misc = load_misc
% A function to define miscellaneous data that might be useful for certain
% programs (for example, specifying unique colors, etc).

    colors = struct(...
        'HattonRed', [234 14 30]/255,...
        'OSUOrange', [195 69 0]/255,...
        'Default', 1 ...
        );
    target = struct('PegPosition',[11 4]);
    %target = struct('PegPosition',[1 1]);
    robot = struct('PegPosition',[8,11]);
    misc = struct('colors',colors,'robot', robot, 'target', target);
end

function framepoints = MakeFramePoints()

% Draws the frame.

xf=[ 0         0   23.50000   97.5  117.7500;
     0  119.2500   23.50000   97.5  117.7500;
    1.5000  119.2500   22.0000   96  119.2500;
    1.5000         0   22.0000   96  119.2500;
    ];
yf=[   83.4960   83.4960   81.9960   81.9960   81.9960;
         0   83.4960         0         0         0;
         0   81.9960         0         0         0;
   83.4960   81.9960   81.9860   81.9860   81.9860];

mxf = (xf)*(2.54/100);
myf = (yf+2.5)*(2.54/100);

framepoints.xdata = mxf;
framepoints.ydata = myf;
end

function explain_link(patch, eventdata)
orig_patch = get(patch,'facecolor');
set(patch,'facecolor','green');
link = get(patch,'UserData');
disp(link);
world = get(link,'world');
joints = get(world,'joints');
disp('This object is connected to the following joints:');
for i=1:length(joints)
    if (strcmp(joints(i).parent,link.name) || strcmp(joints(i).child,link.name))
        disp(joints(i));
    end
end
pause(.25)
set(patch,'facecolor',orig_patch);
end