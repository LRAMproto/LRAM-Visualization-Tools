function object_tests
test1();
test2();

end

function test1()
    x = Joint();
    set(x,'name','a');
    if ~(strcmp(x.name,'a') && strcmp(get(x,'name'),'a'))
        error('Test 1 Fails');
    end
    fprintf('Test 1 passes.\n');
    
end

function test2()
    [fig, ax] = MakeDisplay();

    %% Sets up Links
    framepoints = MakeFramePoints();
    
    frame = Link();
    set(frame,...
        'name','Frame',...
        'type','Custom',...
        'vertices',framepoints,...
        'fillcolor', [.2 .3 .4]...
        );
    
    base = Link();
    set(base,...
        'name','Box',...
        'type','Rectangle',...
        'width',(12.5*2.54/100),...
        'height',(4*2.54/100),...
        'origin',[0,0],...
        'fillcolor',[0.6 0.6 0.6]...        
        );

    robot_plate = Link();
    set(robot_plate,...
        'name','Robot Plate',...
        'type','Rectangle',...
        'width',(24*2.54/100),...
        'height',(24*2.54/100),...
        'origin_angle',0,...
        'fillcolor',[0 0 0]...    
        );

    target_plate = Link();
    set(target_plate,...
        'name','Target Plate',...
        'type','Rectangle',...
        'width',(24*2.54/100),...
        'height',(24*2.54/100),...
        'origin_angle',0,...
        'fillcolor',[1 .3 .3]...    
        );    
    
    arm = Link();
    set(arm,...
        'name','Arm',...
        'type','Rectangle',...
        'width',(1*2.54/100),...
        'height',(18*2.54/100),...
        'origin',[0,(9*2.54/100)],...
        'cap_pct',0.0,...
        'fillcolor',[0.3 0.3 0.3]...
        );
    
    
    %% sets up joints

    arm_joint = Joint();
    set(arm_joint,...
        'name','Arm Joint',...
        'type','Revolute',...
        'parent','Box',...
        'child','Arm',...
        'origin',[0,0],...
        'angle',-1.3...
        )

    box_to_plate_joint = Joint();
    set(box_to_plate_joint,...
        'name','Box to Plate Joint',...
        'type','Continuous',...
        'parent','Robot Plate',...
        'child','Box',...
        'origin',[0,0]...
        );    
    
    robot_plate_to_frame_joint = Joint();
    set(robot_plate_to_frame_joint,...
        'name','Robot Plate to Frame Joint',...
        'type','Continuous',...
        'parent','Frame',...
        'child','Robot Plate',...
        'origin',[(12*2.54/100),1.5]...
        );    
    target_plate_to_frame_joint = Joint();
    set(target_plate_to_frame_joint,...
        'name','Target Plate to Frame Joint',...
        'type','Continuous',...
        'parent','Frame',...
        'child','Target Plate',...
        'origin',[2.75,1.75]...
        );    

    %% Testing Extended
        
    elbow = Link();
    set(elbow,...
        'name','Elbow',...
        'type','Rectangle',...
        'width',(1*2.54/100),...
        'height',(18*2.54/100),...
        'origin',[0,(9*2.54/100)],...
        'fillcolor',[0.3 0.3 0.3]...
        );
    
    elbow_joint = Joint();
    set(elbow_joint,...
        'name','Elbow Joint',...
        'type','Revolute',...
        'parent','Arm',...
        'child','Elbow',...
        'origin',[0,(18*2.54/100)],...
        'angle',-1.3...
        )
        
    ball = Link();
    set(ball,...
        'name','Ball',...
        'type','Circle',...
        'radius',0.0625,...
        'line_width',0.5,...
        'fillcolor',[1 0 0],...
        'origin',[1,1]...
        );
    
    %% Collects

    joints = [robot_plate_to_frame_joint, target_plate_to_frame_joint, box_to_plate_joint, arm_joint];
    links = [frame, target_plate, robot_plate, base, arm, ball];

    %joints = [robot_plate_to_frame_joint, target_plate_to_frame_joint, box_to_plate_joint, arm_joint,elbow_joint];
    %links = [frame, target_plate, robot_plate, base, arm, elbow];
    
    w = World(ax,links,joints);
    w.LoadAll();
    w.DisplayAll();
    for i=0:-0.01:-1
        robot_plate_to_frame_joint.MoveY(i);
        arm_joint.Rotate(i*10);
        elbow_joint.Rotate(i*10);
        w.UpdateVisual;
        pause(0.001);
    end
end

function [fig, ax] = MakeDisplay()
    fig = figure(...
        'Name','Test Figure',...
        'Units','Pixels',...
        'Position',[50,50,600,600]);
    ax = axes(...
        'Parent',fig,...
        'Units','Pixels',...
        'XLim',[-.25 3],...
        'YLim',[-.25 3],...
        'XLimMode','Manual',...
        'YLimMode','Manual',...        
        'Position',[50 50 500 500]);
    grid on;
end

function framepoints = MakeFramePoints()

% Draws the frame.

xf=[ 0         0   23.50000   97.5  117.7500;
     0  119.2500   23.50000   97.5  117.7500;
    1.5000  119.2500   22.0000   96  119.2500;
    1.5000         0   22.0000   96  119.2500];
yf=[   83.4960   83.4960   81.9960   81.9960   81.9960;
         0   83.4960         0         0         0;
         0   81.9960         0         0         0;
   83.4960   81.9960   81.9860   81.9860   81.9860];

mxf = (xf)*(2.54/100);
myf = (yf+2.5)*(2.54/100);

framepoints.xdata = mxf;
framepoints.ydata = myf;
end
