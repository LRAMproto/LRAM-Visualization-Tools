function make_caster_default_settings
% Generates a set of settings for the casting robot simulation.
misc = load_misc;
[links,joints] = load_elements(misc);

CastingRobot = Robot('Caster',links,joints);

% The following saves the settings in the same folder as the script, then
% returns the working directory to the previous working directory.

previous = pwd;
cd(fileparts(mfilename('fullpath')))

save('caster_default_settings','misc', 'CastingRobot');
cd(previous);
end

function [links,joints] = load_elements(misc)
%% Frame

framepoints = MakeFramePoints();

frame = Link();
set(frame,...
    'name','Frame',...
    'type','Custom',...
    'vertices',framepoints,...
    'fillColor', [0.6 0.6 0.6]...
    );

%% Robot Mounting Plate
robot_mounting_plate = Link();
set(robot_mounting_plate,...
    'name','Robot Mounting Plate',...
    'type','Rectangle',...
    'width',misc.mounting_plate.width,...
    'height',misc.mounting_plate.height,...
    'originAngle',0,...
    'cap_pct',0.0,...
    'lineWidth',2,...
    'buttonDownFcn',@explain_link,...
    'fillColor',[0 0 0]...
    );

% secures plate to frame
robot_mounting_plate_to_frame_joint = Joint();
set(robot_mounting_plate_to_frame_joint,...
    'name','Robot Mounting Plate to Frame Joint',...
    'type','Continuous',...
    'parent','Frame',...
    'child','Robot Mounting Plate',...
    'position',misc.target.PlatePositionFcn(misc.robot.PlatePosition),... % TODO: Replace this with a proper function.
    'origin',[(12*2.54/100),((12+2.5)*2.54/100)]...
    );

%% Robot Box, Arm
base = Link();
set(base,...
    'name','Box',...
    'type','Rectangle',...
    'width',misc.robot.box.width,...
    'height',misc.robot.box.height,...
    'origin',[0,0],...
    'cap_pct',0.2,...
    'buttonDownFcn',@explain_link,...
    'fillColor','white'...
    );
arm = Link();
set(arm,...
    'name','Arm',...
    'type','Rectangle',...
    'width',misc.robot.arm.width,...
    'height',misc.robot.arm.height,...
    'origin',[0,0.5*misc.robot.arm.width],...
    'cap_pct',0.2,...
    'lineWidth',2,...
    'originAngle',pi/2,...
    'buttonDownFcn',@explain_link,...
    'fillColor','white'...
    );

arm.AddTrackingPoint('Arm Pivot Point',[0 0]);

arm_joint = Joint();
set(arm_joint,...
    'name','Arm Joint',...
    'type','Revolute',...
    'parent','Box',...
    'child','Arm',...
    'origin',[0,0],...
    'angle',misc.robot.arm.angle ...
    )

box_to_plate_joint = Joint();
set(box_to_plate_joint,...
    'name','Box to Mounting Plate Joint',...
    'type','Continuous',...
    'parent','Robot Mounting Plate',...
    'child','Box',...
    'position',misc.robot.PegPositionFcn(misc.robot.pegPosition),...
    'origin',[(-12+12.5/2)*2.54/100,(12+4/2)*2.54/100]...
    );


%% Target Mounting Plate

target_mounting_plate = Link();
set(target_mounting_plate,...
    'name','Target Mounting Plate',...
    'type','Rectangle',...
    'width',misc.mounting_plate.width,...
    'height',misc.mounting_plate.height,...
    'originAngle',0,...
    'buttonDownFcn',@explain_link,...
    'fillColor',[0 0 0]...
    );

% Secures plate to Frame

target_mounting_plate_to_frame_joint = Joint();
set(target_mounting_plate_to_frame_joint,...
    'name','Target Mounting Plate to Frame Joint',...
    'type','Continuous',...
    'parent','Frame',...
    'child','Target Mounting Plate',...
    'position',misc.target.PlatePositionFcn(misc.target.PlatePosition),...
    'origin',[2.75,((12+2.5)*2.54/100)]...
    );

%% Target Plate Pivot

target_plate_pivot = Link();
set(target_plate_pivot,...
    'name','Target Plate Pivot',...
    'type','Circle',...
    'radius',(0.75*2.54/100),...
    'buttonDownFcn',@explain_link,...
    'fillColor',[.8 .8 .8]...
    );

target_plate_pivot.AddTrackingPoint('Target Pivot Point',[0 0]);

target_plate_pivot_to_plate_joint = Joint();
set(target_plate_pivot_to_plate_joint,...
    'name','Target Plate Pivot to Target Mounting Plate Joint',...
    'type','Continuous',...
    'parent','Target Mounting Plate',...
    'child','Target Plate Pivot',...
    'position',misc.target.PegPositionFcn(misc.target.pegPosition),...
    'origin',[(-12)*2.54/100,(12)*2.54/100]...
    );

%% Target Plate

target_plate = Link();
set(target_plate,...
    'name','Target Plate',...
    'type','Rectangle',...
    'width',18*2.54/100,...
    'height',.5*2.54/100,...
    'origin',[0 1.5*2.54/100],...
    'buttonDownFcn',@explain_link,...
    'fillColor','white');

target_plate_to_pivot_joint = Joint();
set(target_plate_to_pivot_joint,...
    'name','Target Plate to Pivot Joint',...
    'parent','Target Plate Pivot',...
    'child','Target Plate',...
    'angle',1.3,...
    'pivotPoint',[0 0]...
    );

%% Ball/World
root_link = Link();
set(root_link,...
    'name','Root Link',...
    'type','Circle',...
    'radius',0.0,...
    'origin',[0 0]...
    );

ball = Link();
set(ball,...
    'name','Ball',...
    'type','Circle',...
    'radius',1.5*2.54/100,...
    'fillColor',misc.colors.HattonRed,...
    'lineWidth',0.5,...
    'buttonDownFcn',@explain_link,...
    'origin',[0,0]...
    );

ball_position_joint = Joint();
set(ball_position_joint,...
    'name','Ball Position Joint',...
    'type','Continuous',...
    'parent','Root Link',...
    'child','Ball',...
    'origin',[0 0],...
    'position',[2, 1]...
    );

%% Collecting joints/links

% Order matters in the links: objects on top appear at the bottom layer of the
% simulation.

links = [frame, target_mounting_plate, robot_mounting_plate, base, arm, target_plate_pivot, target_plate, ball, root_link];
joints = [robot_mounting_plate_to_frame_joint, target_mounting_plate_to_frame_joint, box_to_plate_joint, arm_joint, target_plate_pivot_to_plate_joint, target_plate_to_pivot_joint, ball_position_joint];
end

function misc = load_misc
% A function to define miscellaneous data that might be useful for certain
% programs (for example, specifying unique colors, etc).

misc.colors.HattonRed = [234 14 30]/255;
misc.colors.OsuOrange = [195 69 0]/255;
misc.colors.SpotColorDefault = 1;

misc.mounting_plate.width = (24*2.54/100);
misc.mounting_plate.height = (24*2.54/100);

misc.target.pegPosition = [11 4];
misc.target.PegPositionFcn = @TargetPegPositionFcn;
misc.target.PlatePosition = 18; % Inches from Top of frame
misc.target.PlatePositionFcn = @TargetPlatePositionFcn;

misc.robot.pegPosition = [8,11];
misc.robot.PlatePosition = 25; % Inches from top of frame.
misc.robot.PlatePositionFcn = @RobotPlatePositionFcn;
misc.robot.PegPositionFcn = @RobotPegPositionFcn;

misc.robot.arm.width = (18*2.54/100);
misc.robot.arm.height = (1*2.54/100);
misc.robot.arm.angle = -2.6;
misc.robot.arm.velocity = 25;

misc.robot.box.width =  (12.5*2.54/100);
misc.robot.box.height = (4*2.54/100);
end

function position = RobotPlatePositionFcn(in)
position = [0, ((82-in-24)*2.54/100)];
end

function position = TargetPlatePositionFcn(in)
position = [0, ((82-in-24)*2.54/100)];
end


function position = RobotPegPositionFcn(pegPosition)
position = [(.5+(1*pegPosition(1))-1)*2.54/100,...
    -(.5+(1*pegPosition(2))-1)*2.54/100];
end

function position = TargetPegPositionFcn(pegPosition)
position = ...
    [(2+(1*pegPosition(1))-1)*2.54/100,...
    -(3+(1*pegPosition(2))-1)*2.54/100];
end

function framepoints = MakeFramePoints()

% Draws the frame.

xf=[ 0         0   23.50000   97.5  117.7500;
    0  119.2500   23.50000   97.5  117.7500;
    1.5000  119.2500   22.0000   96  119.2500;
    1.5000         0   22.0000   96  119.2500;
    ];
yf=[   83.4960   83.4960   81.9960   81.9960   81.9960;
    0   83.4960         0         0         0;
    0   81.9960         0         0         0;
    83.4960   81.9960   81.9860   81.9860   81.9860];

mxf = (xf)*(2.54/100);
myf = (yf+2.5)*(2.54/100);

framepoints.xdata = mxf;
framepoints.ydata = myf;
end

function explain_link(patch, eventdata)
orig_patch = get(patch,'facecolor');
set(patch,'facecolor','green');
link = get(patch,'UserData');
disp(link);
world = get(link.robot,'world');
joints = get(link.robot,'joints');
disp('This object is connected to the following joints:');
for i=1:length(joints)
    if (strcmp(joints(i).parent,link.name) || strcmp(joints(i).child,link.name))
        disp(joints(i));
    end
end
pause(.25)
set(patch,'facecolor',orig_patch);
end

function position = PlatePositionFcn(in)
position = [0, ((82-in-24)*2.54/100)];
end