function [ output_args ] = vtest1( input_args )
handles.fig = figure(...
    'position',[0 0 400 400],...        
    'KeyPressFcn',@motion_control);
handles.ax = axes(...
    'parent',handles.fig,...
    'units','pixels',...
    'position',[0 0 300 300],...
    'xlimmode','manual',...
    'ylimmode','manual',...
    'xlim',[-5 5],...
    'ylim',[-5 5]...
    );

handles.A = Link();
set(handles.A,...
    'name','A',...
    'type','Rectangle',...
    'fillColor',[0.7 0.7 0.7],...
    'width',1.5,...
    'height',5,...
    'cap_pct',0.2,...
    'originAngle',pi/2,...
    'buttonDownFcn',@testButtonDown);
handles.B = Link();
set(handles.B,...
    'name','B',...
    'type','Rectangle',...
    'fillColor',[0 0.6 0.7],...
    'cap_pct',0.2,...
    'origin',[1 0],...
    'width',3,...
    'height',0.5);
handles.C = Link();
set(handles.C,...
    'name','C',...
    'type','Custom',...
    'vertices',struct('xdata',[-2; -1; 1; 3; 3;],'ydata',[-1; 1; 1; 1; 0;]),...      
    'fillColor',[0 0.3 0.4],...
    'cap_pct',0.2,...
    'origin',[1 0],...
    'height',0.5);

handles.atb = Joint();
set(handles.atb,...
    'name','atb',...
    'type','Revolute',...
    'parent','A',...
    'child','B',...
    'pivotPoint',[0 0],...
    'origin',[0 1]);
handles.btc = Joint();
set(handles.btc,...
    'name','btc',...
    'type','Revolute',...
    'parent','B',...
    'child','C',...
    'pivotPoint',[0 0],...
    'origin',[2 0]);

handles.H = Link();
set(handles.H,...
    'name','H',...
    'type','Custom',...
    'vertices',struct('xdata',[-1; 2; 2; -1;],'ydata',[-1; 1; 0.3; -1;]),...
    'fillColor',[0.7 0.7 0.7],...
    'buttonDownFcn',@testButtonDown);
handles.ath = Joint();
set(handles.ath,...
    'name','ath',...
    'type','Revolute',...
    'parent','A',...
    'child','H',...
    'pivotPoint',[0 0],...
    'origin',[0 2]);

handles.links = [ handles.A,handles.H,handles.B,handles.C];
handles.joints = [handles.atb, handles.btc,handles.ath];
handles.robot = Robot('Harold',handles.links,handles.joints);

handles.world = World(handles.ax,handles.robot);
handles.world.LoadAll();
handles.atb.Rotate(-pi/2);
handles.btc.Rotate(pi/2);
handles.ath.Rotate(-1/5*pi);
guidata(handles.fig,handles);

end

function motion_control(fig,eventdata)
disp(eventdata);
handles = guidata(fig);
if strcmp(eventdata.Key,'downarrow')
    handles.atb.Rotate(handles.atb.angle-pi/16);
elseif strcmp(eventdata.Key,'uparrow')
    handles.atb.Rotate(handles.atb.angle+pi/16);
end

if strcmp(eventdata.Key,'leftarrow')
    handles.btc.Rotate(handles.btc.angle-pi/16);
elseif strcmp(eventdata.Key,'rightarrow')
    handles.btc.Rotate(handles.btc.angle+pi/16);    
end

end

function testButtonDown(patch, eventdata);
disp('hello!');
end
